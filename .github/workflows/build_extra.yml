name: build linux kernel

on:
  workflow_call:
    inputs:
      artifact:
        type: string
        description: name of the built package artifact
        default: extramodules
      debug:
        type: boolean
        description: run in debug mode
        default: false

jobs:
  build_kernel:
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    steps:
      - name: Prepare
        run: |
          echo "::group::Build Configuration"
          echo "\
          Aritifact Name            : ${{inputs.artifact}}
          Workflow debug            : ${{inputs.debug}}"
          echo "::endgroup::"

          echo "::group::Install essential packages"
          packages=(
            ccache
            git
            rsync
            nodejs
            clang
            llvm
            lld
          )
          if [[ "${{inputs.debug}}" == true ]]; then
            packages+=(
              neovim
              htop
              dust
              bash-completion
              tmate
            )
            ln -sf /usr/bin/nvim /bin/vi
          fi
          pacman -Syu --noconfirm --needed "${packages[@]}"
          echo "::endgroup::"

          echo "::group::Prepare builder user"
          useradd -m builder
          echo 'builder ALL=(ALL:ALL) NOPASSWD: ALL' > /etc/sudoers.d/builder
          echo "::endgroup::"

      - name: Debug workflow with ssh
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.debug }}
        with:
          detached: true
      
      - uses: actions/checkout@v3
      
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          append-timestamp: false
          key: linux-extra
          max-size: 64M
      
      - name: Load kernel package from cache
        uses: actions/cache/restore@v3
        with:
          key: pkg-linux-clang
          path: '*.pkg.tar.zst'
      
      - name: Prepare source and build environment
        run: |
          echo "::group::Setup ccache"
          su -c 'mkdir -p ~/.config/ccache' builder
          install -Dm644 ~/.config/ccache/ccache.conf ~builder/.config/ccache
          echo "::endgroup::"

          echo "::group::Install nvidia-dkms"
          CC=true pacman -S --noconfirm nvidia-dkms
          echo "::endgroup::"

          echo "::group::Install linux-clang packages"
          # pacman -S --noconfirm -U *.pkg.tar.zst
          echo "::endgroup::"
          
          echo "Fix permissions"
          chown -R builder:builder .
      
      - name: Build extra module
        run:
          cd extra/nvidia
          tar --zstd -cf extra.pkg.tar.zst -T /dev/null
        
      - name: Remove old ccache
        run: |
          curl -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN" -X DELETE "https://api.github.com/repos/${{ github.repository }}/actions/caches?key=$CACHE_KEY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CACHE_KEY: ccache-linux-extra-

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          retention-days: 7
          name: ${{inputs.artifact}}
          path: 'extra/nvidia/*.pkg.tar.zst'
